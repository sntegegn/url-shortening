version: '3.8'
services:
  shortner:
    build: .
    container_name: shortner
    ports:
      - 4000:4000
    depends_on:
      my-db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
  my-db:
    image: postgres
    container_name: my-db
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB : "urlshortening"
      PGUSER: "urlshortening"
      POSTGRES_USER: "urlshortening"
      POSTGRES_PASSWORD: "pa55word"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      start_period: 30s
      interval: 10s
      timeout: 10s
      retries: 5
  migrate:
    image: migrate/migrate
    restart: on-failure
    volumes:
      - ./migrations:/migrations
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "postgres://urlshortening:pa55word@my-db/urlshortening?sslmode=disable"
      ]
    command: ["up"]
    depends_on:
      my-db:
        condition: service_healthy
  prometheus:
    image: prom/prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    environment:
     - GF_SERVER_ROOT_URL=http://my.grafana.server/
     - GF_INSTALL_PLUGINS=grafana-clock-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/:/etc/grafana/provisioning/datasources
  jaeger:
    image: jaegertracing/all-in-one:1.39
    container_name: jaeger
    restart: always
    ports:
      - 16686:16686
    environment:
      - COLLECTOR_OTLP_ENABLED=true
volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
